{"version":3,"sources":["api/api.js","api/address-api.js","redux/addressReducer.js","api/clientlist-api.js","redux/clientListReducer.js","api/clientmanagement-api.js","redux/clientManagementThunk.js","components/ClientList/ClientList.jsx","components/Address/AddressAndClientList.jsx","App.jsx","redux/redux-store.js","index.jsx"],"names":["instance","axios","create","baseURL","addressApi","get","then","res","data","id","ADDRESS_STREET","ADDRESS_HOUSE","ADDRESS_HOUSE_FLAT","initialState","streets","houses","houseFlats","addressReducer","state","action","type","clientListApi","addressId","CLIENTS_CLIENTLIST","clients","actions","getClientList","dispatch","a","clientListReducer","clientManagementApi","phone","email","name","bindId","post","clientId","put","delete","bindClient","addClient","deleteClient","ClientList","props","useState","visible","setVisible","confirmLoading","setConfirmLoading","editPhoneNumber","setEditPhoneNumber","editEmail","setEditEmail","editClientName","setEditClientName","clientListState","useSelector","clientList","useDispatch","useEffect","houseFlatId","editPhoneChange","e","target","value","editEmailChange","editClientNameChange","handleCancel","className","map","key","span","hoverable","style","margin","DeleteOutlined","onClick","EditOutlined","UserOutlined","PhoneOutlined","MailOutlined","centered","title","onOk","setTimeout","onCancel","okText","cancelText","position","left","defaultValue","onChange","addonBefore","width","Option","Select","AddressAndClientList","streetId","setStreetId","streetName","setStreetName","houseId","setHouseId","houseNumber","setHouseNumber","setHouseFlatId","houseFlatNumber","setHouseFlatNumber","phoneNumber","setPhoneNumber","setEmail","clientName","setClientName","response","address","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","onSelect","shape","icon","UserAddOutlined","Content","Layout","Footer","App","padding","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.348de223.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://dispex.org/api/vtest'\r\n});","import {instance} from \"./api\";\r\n\r\nexport const addressApi = {\r\n    getStreets() {\r\n        return instance.get(`/Request/streets`)\r\n            .then(res => res.data)\r\n    },\r\n    getHouses(id) {\r\n        return instance.get(`/Request/houses/` + id)\r\n            .then(res => res.data)\r\n    },\r\n    getHouseFlats(id) {\r\n        return instance.get(`/Request/house_flats/` + id)\r\n            .then(res => res.data)\r\n    }\r\n}","import {addressApi} from \"../api/address-api\";\r\n\r\nconst ADDRESS_STREET = 'ADDRESS/STREET';\r\nconst ADDRESS_HOUSE = 'ADDRESS/HOUSE';\r\nconst ADDRESS_HOUSE_FLAT = 'ADDRESS/HOUSE_FLAT'\r\n\r\nlet initialState = {\r\n    streets: [],\r\n    houses: [],\r\n    houseFlats: []\r\n};\r\n\r\nconst addressReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADDRESS_STREET:\r\n            return {\r\n                ...state,\r\n                streets: action.streets\r\n            }\r\n        case ADDRESS_HOUSE:\r\n            return{\r\n                ...state,\r\n                houses: action.houses\r\n            }\r\n        case ADDRESS_HOUSE_FLAT:\r\n            return {\r\n                ...state,\r\n                houseFlats: action.houseFlats\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action creator\r\nconst setStreet = (streets) => ({type: 'ADDRESS/STREET', streets});\r\nconst setHouse = (houses) => ({type: 'ADDRESS/HOUSE', houses});\r\nconst setHouseFlats = (houseFlats) => ({type: 'ADDRESS/HOUSE_FLAT', houseFlats});\r\n\r\n//thunk creator\r\nexport const requestStreets = () => async (dispatch) => {\r\n    let response = await addressApi.getStreets();\r\n    dispatch(setStreet(response));\r\n}\r\nexport const requestHouses = (id) => async(dispatch) => {\r\n    let response = await addressApi.getHouses(id);\r\n    dispatch(setHouse(response));\r\n}\r\nexport const requestHouseFlats = (id) => async(dispatch) => {\r\n    let response = await addressApi.getHouseFlats(id);\r\n    dispatch(setHouseFlats(response));\r\n}\r\n\r\nexport default addressReducer;","import {instance} from \"./api\";\r\n\r\nexport const clientListApi = {\r\n    getClientList(addressId) {\r\n        return instance.get(`/HousingStock/clients?=${addressId}`)\r\n            .then(res=>res.data)\r\n    }\r\n}","import {clientListApi} from \"../api/clientlist-api\";\r\n\r\nconst CLIENTS_CLIENTLIST = 'CLIENTS/CLIENTLIST';\r\n\r\nlet initialState = {\r\n    clients: []\r\n}\r\n\r\nconst clientListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CLIENTS_CLIENTLIST:\r\n        return{\r\n            ...state,\r\n            clients: action.data\r\n        }\r\n    default:\r\n        return state;\r\n}}\r\n\r\n//action creator\r\nconst actions = {\r\n    setClientList: (data) => ({type: 'CLIENTS/CLIENTLIST', data}),\r\n}\r\n\r\n//thunk creator\r\nexport const getClientList = (addressId) => async(dispatch)=>{\r\n        let data = await clientListApi.getClientList(addressId);\r\n        dispatch(actions.setClientList(data));\r\n}\r\nexport default clientListReducer;","import {instance} from \"./api\";\r\n\r\nexport const clientManagementApi = {\r\n    addClient(id,phone,email,name, bindId) {\r\n        return instance.post(`/HousingStock/client`, {id: id, phone: phone,email: email, name: name, bindId: bindId})\r\n            .then(res=>res.data)\r\n    },\r\n    bindClient(addressId, clientId) {\r\n        return instance.put(`/HousingStock/bind_client`, {addressId, clientId})\r\n            .then(res=>res.data)\r\n    },\r\n    deleteClient(id) {\r\n        return instance.delete(`/HousingStock/bind_client/` + id)\r\n    }\r\n}","import {clientManagementApi} from \"../api/clientmanagement-api\";\r\nimport {getClientList} from \"./clientListReducer\";\r\n\r\n//thunk creator\r\nexport const bindClient = (addressId, id) => async (dispatch) => {\r\n    await clientManagementApi.bindClient(addressId, id)\r\n    dispatch(getClientList(addressId))\r\n}\r\nexport const addClient = (id = 0, phone, email, name, addressId) => async (dispatch) => {\r\n    let data = await clientManagementApi.addClient(id, phone, email, name, 0);\r\n    dispatch(bindClient(addressId, data.id));\r\n}\r\nexport const deleteClient = (addressId, id) => async (dispatch) => {\r\n    await clientManagementApi.deleteClient(id)\r\n    dispatch(getClientList(addressId))\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientList} from \"../../redux/clientListReducer\";\r\nimport {Card, Col, Input, Modal, Row} from \"antd\";\r\nimport {\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    MailOutlined,\r\n    PhoneOutlined,\r\n    UserOutlined\r\n} from \"@ant-design/icons\";\r\nimport \"./ClientList.css\"\r\nimport {addClient, deleteClient} from \"../../redux/clientManagementThunk\";\r\n\r\n//todo:refactor repeated code\r\n\r\nconst ClientList = (props) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [editPhoneNumber, setEditPhoneNumber] = useState(\"\");\r\n    const [editEmail, setEditEmail] = useState(\"\");\r\n    const [editClientName, setEditClientName] = useState(\"\");\r\n    const clientListState = useSelector(state => state.clientList.clients)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getClientList(props.houseFlatId))\r\n    }, [props.houseFlatId]);\r\n    const editClick = () => {\r\n        setVisible(true);\r\n    };\r\n    const handleOk = (bindId) => {\r\n        dispatch(addClient(0, editPhoneNumber, editEmail, editClientName, props.houseFlatId))\r\n        dispatch(deleteClient(props.houseFlatId, bindId))\r\n        setConfirmLoading(true);\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n            setConfirmLoading(false);\r\n        }, 2000);\r\n    };\r\n    const editPhoneChange = (e) => {\r\n        setEditPhoneNumber(e.target.value);\r\n    }\r\n    const editEmailChange = (e) => {\r\n        setEditEmail(e.target.value);\r\n    }\r\n    const editClientNameChange = (e) => {\r\n        setEditClientName(e.target.value);\r\n    }\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n    const deleteClientClick = (id) => {\r\n        dispatch(deleteClient(props.houseFlatId,id))\r\n    }\r\n    return (\r\n        <div className=\"app-clients\">\r\n            <Row>\r\n                {clientListState ? clientListState.map(key => <Col span={6} ><Card hoverable className=\"app-clients-card\"\r\n                                                                                   key={key.id}\r\n                                                                                    style={{margin: 10}}\r\n                                                                                    actions={[<DeleteOutlined onClick={() => deleteClientClick(key.bindId)}/>,\r\n                                                                                        <EditOutlined onClick={()=>editClick()}/>]}>\r\n                        <UserOutlined/>\r\n                        {key.name ? <p className=\"app-clients-name\">{key.name}</p> : \"\"}\r\n                        {key.phone ? <p className=\"app-clients-phone\"><PhoneOutlined/> {key.phone}</p> : \"\"}\r\n                        {key.email ? <p className=\"app-clients-email\"><MailOutlined/> {key.email}</p> : \"\"}\r\n                    </Card>\r\n                    <>\r\n                        <Modal centered\r\n                               title=\"Изменить информацию о жильце\"\r\n                               visible={visible}\r\n                               onOk={()=>handleOk(key.bindId)}\r\n                               confirmLoading={confirmLoading}\r\n                               onCancel={handleCancel}\r\n                               okText={\"Добавить\"}\r\n                               cancelText={\"Отмена\"}>\r\n                            <span className=\"app-phone-text\">Телефон</span>\r\n                            <span style={{position: \"absolute\", left: \"37%\"}}>e-mail</span>\r\n                            <div>\r\n                                <Input defaultValue={key.phone} onChange={editPhoneChange} addonBefore=\"+7\" style={{width: 160, margin: \"10px 0 0 0\"}} />\r\n                                <Input defaultValue={key.email} onChange={editEmailChange} style={{width: 300, margin: \"10px 0 0 7px\"}} />\r\n                            </div>\r\n                            <p style={{margin: \"10px 0 0 0\"}}>Ф.И.О.</p>\r\n                            <Input defaultValue={key.name} onChange={editClientNameChange} style={{margin: \"10px 0 0 0\", width: 350}} />\r\n                        </Modal>\r\n                    </>\r\n                    </Col>) : <p>Жители на данный момент отсутствуют.</p>}\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientList;","import {Button, Input, Modal, Select} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestHouseFlats, requestHouses, requestStreets} from \"../../redux/addressReducer\";\r\nimport \"./AddressAndClientList.css\"\r\nimport ClientList from \"../ClientList/ClientList\";\r\nimport {UserAddOutlined} from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\nimport {addClient} from \"../../redux/clientManagementThunk\";\r\n\r\nconst {Option} = Select;\r\n//todo:refactor repeated code\r\nconst AddressAndClientList = () => {\r\n    const dispatch = useDispatch();\r\n    const [visible, setVisible] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [streetId, setStreetId] = useState(\"\");\r\n    const [streetName, setStreetName] = useState(\"\");\r\n    const [houseId, setHouseId] = useState(\"\");\r\n    const [houseNumber, setHouseNumber] = useState(\"\");\r\n    const [houseFlatId, setHouseFlatId] = useState(\"\");\r\n    const [houseFlatNumber, setHouseFlatNumber] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [clientName, setClientName] = useState(\"\");\r\n    useEffect(() => {\r\n        dispatch(requestStreets())\r\n    });\r\n    useEffect(() => {\r\n            dispatch(requestHouses(streetId))\r\n        },\r\n        [streetId]);\r\n    useEffect(() => {\r\n            dispatch(requestHouseFlats(houseId))\r\n        },\r\n        [houseId])\r\n    const streets = useSelector(state => state.address.streets);\r\n    const houses = useSelector(state => state.address.houses);\r\n    const houseFlats = useSelector(state => state.address.houseFlats);\r\n    const showModal = () => {\r\n        setVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        dispatch(addClient(0, phoneNumber, email, clientName, houseFlatId));\r\n        setConfirmLoading(true);\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n            setConfirmLoading(false);\r\n            setPhoneNumber(\"\");\r\n            setClientName(\"\");\r\n            setEmail(\"\");\r\n        }, 2000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n    const phoneNumberChange = (e) => {\r\n        setPhoneNumber(e.target.value);\r\n    }\r\n    const emailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const clientNameChange = (e) => {\r\n        setClientName(e.target.value)\r\n    }\r\n    return <div className=\"app-address-clients\">\r\n        <p>\r\n            Адрес\r\n        </p>\r\n        <Select showSearch\r\n                style={{width: 200}}\r\n                placeholder=\"Улица\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                }\r\n                onSelect={(value, option) => {\r\n                    setStreetId(option.key);\r\n                    setStreetName(option.value);\r\n                }}>\r\n            {streets.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <Select showSearch\r\n                style={{width: 80}}\r\n                placeholder=\"Дом\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                } onSelect={(value, option) => {\r\n            setHouseId(option.key);\r\n            setHouseNumber(option.value);\r\n        }}>\r\n            {houses.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <Select showSearch\r\n                style={{width: 110}}\r\n                placeholder=\"Кв/офис\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                } onSelect={(value, option) => {\r\n            setHouseFlatId(option.key);\r\n            setHouseFlatNumber(option.value);\r\n        }}>\r\n            {houseFlats.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <p className=\"app-address-street\">\r\n            {streetName ? <span>ул. {streetName}</span> : \"\"}\r\n            {houseNumber ? <span>, {houseNumber}</span> : \"\"}\r\n            {houseFlatNumber ? <span>, {houseFlatNumber}<Button style={{margin: \"0 0 0 10px\"}} shape=\"circle\" icon={<UserAddOutlined/>}\r\n                                                                 onClick={showModal}/></span> : \"\"}\r\n        </p>\r\n        <>\r\n            <Modal centered\r\n                   title={[<UserAddOutlined/>, \" Добавить жильца\"]}\r\n                   visible={visible}\r\n                   onOk={handleOk}\r\n                   confirmLoading={confirmLoading}\r\n                   onCancel={handleCancel}\r\n                   okText={\"Добавить\"}\r\n                   cancelText={\"Отмена\"}>\r\n                <p style={{\"font-weight\": 'bold'}}>ул. {streetName}, {houseNumber}, {houseFlatNumber}</p>\r\n                <span className=\"app-phone-text\">Телефон</span>\r\n                <span style={{position: \"absolute\", left: \"37%\"}}>e-mail</span>\r\n                <div>\r\n                <Input value={phoneNumber} addonBefore=\"+7\" style={{width: 160, margin: \"10px 0 0 0\"}} onChange={phoneNumberChange}/>\r\n                <Input value={email} style={{width: 300, margin: \"10px 0 0 7px\"}} onChange={emailChange}/>\r\n                </div>\r\n                <p style={{margin: \"10px 0 0 0\"}}>Ф.И.О.</p>\r\n                <Input value={clientName} style={{margin: \"10px 0 0 0\", width: 350}} onChange={clientNameChange}/>\r\n            </Modal>\r\n        </>\r\n        <ClientList houseFlatId={houseFlatId}/>\r\n    </div>\r\n}\r\n\r\nexport default AddressAndClientList;","import React from \"react\";\nimport './styles/App.css';\nimport AddressAndClientList from \"./components/Address/AddressAndClientList\";\nimport 'antd/dist/antd.css';\nimport {Layout} from \"antd\";\n\nconst {  Content, Footer } = Layout;\n\nconst App = () => {\n    return (\n        <div className=\"app-wrapper\">\n            <Layout className=\"layout\">\n                <Content style={{padding: '0 50px'}}>\n                    <div className=\"site-layout-content\">\n                        <AddressAndClientList/>\n                    </div>\n                </Content>\n                <Footer></Footer>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport addressReducer from \"./addressReducer\";\r\nimport clientListReducer from \"./clientListReducer\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        address: addressReducer,\r\n        clientList: clientListReducer,\r\n    }\r\n)\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}