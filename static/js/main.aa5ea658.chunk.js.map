{"version":3,"sources":["api/api.js","api/address-api.js","redux/addressReducer.js","api/clientlist-api.js","redux/clientListReducer.js","components/ClientList/ClientList.jsx","components/Address/AddressAndClientList.jsx","components/ClientManagement/ClientManagement.jsx","App.jsx","redux/clientManagementReducer.js","redux/redux-store.js","index.jsx"],"names":["instance","axios","create","baseURL","addressApi","get","then","res","data","id","ADDRESS_STREET","ADDRESS_HOUSE","ADDRESS_HOUSE_FLAT","initialState","streets","houses","houseFlats","addressReducer","state","action","type","clientListApi","addressId","CLIENTS_CLIENTLIST","clients","actions","clientListReducer","ClientList","props","clientListState","useSelector","clientList","dispatch","useDispatch","useEffect","a","getClientList","houseFlatId","className","map","key","span","hoverable","style","margin","DeleteOutlined","EditOutlined","UserOutlined","name","phone","PhoneOutlined","email","MailOutlined","Option","Select","AddressAndClientList","useState","streetId","setStreetId","streetName","setStreetName","houseId","setHouseId","houseNumber","setHouseNumber","setHouseFlatId","houseFlatNumber","setHouseFlatNumber","response","address","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","onSelect","value","shape","icon","UserAddOutlined","ClientManagement","Content","Layout","Footer","App","padding","path","render","CLIENTS_SET_CLIENT_ADDED","Name","Phone","Email","clientManagementReducer","payload","reducers","combineReducers","clientManagement","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aa5ea658.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://dispex.org/api/vtest'\r\n});","import {instance} from \"./api\";\r\n\r\nexport const addressApi = {\r\n    getStreets() {\r\n        return instance.get(`/Request/streets`)\r\n            .then(res => res.data)\r\n    },\r\n    getHouses(id) {\r\n        return instance.get(`/Request/houses/` + id)\r\n            .then(res => res.data)\r\n    },\r\n    getHouseFlats(id) {\r\n        return instance.get(`/Request/house_flats/` + id)\r\n            .then(res => res.data)\r\n    }\r\n}","import {addressApi} from \"../api/address-api\";\r\n\r\nconst ADDRESS_STREET = 'ADDRESS/STREET';\r\nconst ADDRESS_HOUSE = 'ADDRESS/HOUSE';\r\nconst ADDRESS_HOUSE_FLAT = 'ADDRESS/HOUSE_FLAT'\r\n\r\nlet initialState = {\r\n    streets: [],\r\n    houses: [],\r\n    houseFlats: []\r\n};\r\n\r\nconst addressReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADDRESS_STREET:\r\n            return {\r\n                ...state,\r\n                streets: action.streets\r\n            }\r\n        case ADDRESS_HOUSE:\r\n            return{\r\n                ...state,\r\n                houses: action.houses\r\n            }\r\n        case ADDRESS_HOUSE_FLAT:\r\n            return {\r\n                ...state,\r\n                houseFlats: action.houseFlats\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//action creator\r\nconst setStreet = (streets) => ({type: 'ADDRESS/STREET', streets});\r\nconst setHouse = (houses) => ({type: 'ADDRESS/HOUSE', houses});\r\nconst setHouseFlats = (houseFlats) => ({type: 'ADDRESS/HOUSE_FLAT', houseFlats});\r\n\r\n//thunk creator\r\nexport const requestStreets = () => async (dispatch) => {\r\n    let response = await addressApi.getStreets();\r\n    dispatch(setStreet(response));\r\n}\r\nexport const requestHouses = (id) => async(dispatch) => {\r\n    let response = await addressApi.getHouses(id);\r\n    dispatch(setHouse(response));\r\n}\r\nexport const requestHouseFlats = (id) => async(dispatch) => {\r\n    let response = await addressApi.getHouseFlats(id);\r\n    dispatch(setHouseFlats(response));\r\n}\r\n\r\nexport default addressReducer;","import {instance} from \"./api\";\r\n\r\nexport const clientListApi = {\r\n    getClientList(addressId) {\r\n        return instance.get(`/HousingStock/clients?=${addressId}`)\r\n            .then(res=>res.data)\r\n    }\r\n}","import {clientListApi} from \"../api/clientlist-api\";\r\n\r\nconst CLIENTS_CLIENTLIST = 'CLIENTS/CLIENTLIST';\r\n\r\nlet initialState = {\r\n    clients: []\r\n}\r\n\r\nconst clientListReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CLIENTS_CLIENTLIST:\r\n        return{\r\n            ...state,\r\n            clients: action.data\r\n        }\r\n    default:\r\n        return state;\r\n}}\r\n\r\n\r\n//action creator\r\nconst actions = {\r\n    setClientList: (data) => ({type: 'CLIENTS/CLIENTLIST', data}),\r\n}\r\n\r\n//thunk creator\r\nexport const getClientList = (addressId = 0) => {\r\n    return async(dispatch)=>{\r\n        let data = await clientListApi.getClientList(addressId);\r\n        dispatch(actions.setClientList(data));\r\n    }\r\n}\r\nexport default clientListReducer;","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getClientList} from \"../../redux/clientListReducer\";\r\nimport {Card, Col, Row} from \"antd\";\r\nimport {DeleteOutlined, EditOutlined, MailOutlined, PhoneOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport \"./ClientList.css\"\r\n\r\nconst ClientList = (props) => {\r\n    const clientListState = useSelector(state => state.clientList.clients)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getClientList(props.houseFlatId))\r\n    }, [props.houseFlatId])\r\n    return (\r\n        <div className=\"app-clients\">\r\n            <Row>\r\n            {clientListState.map(key => <Col span={6}><Card hoverable className=\"app-clients-card\" style={{margin: 10}}\r\n                                              actions={[<DeleteOutlined/>, <EditOutlined key=\"edit\"/>]}>\r\n                <UserOutlined/>\r\n                {key.name ? <p key={key.id} className=\"app-clients-name\">{key.name}</p> : \"\"}\r\n                {key.phone ? <p key={key.id} className=\"app-clients-phone\"><PhoneOutlined/> {key.phone}</p> : \"\"}\r\n                {key.email ? <p key={key.id} className=\"app-clients-email\"><MailOutlined/> {key.email}</p> : \"\"}\r\n            </Card>\r\n                </Col>)}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientList;","import {Button, Select} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestHouseFlats, requestHouses, requestStreets} from \"../../redux/addressReducer\";\r\nimport \"./AddressAndClientList.css\"\r\nimport ClientList from \"../ClientList/ClientList\";\r\nimport {UserAddOutlined} from \"@ant-design/icons\";\r\n\r\nconst {Option} = Select;\r\n\r\nconst AddressAndClientList = () => {\r\n    const dispatch = useDispatch();\r\n    const [streetId, setStreetId] = useState(\"\");\r\n    const [streetName, setStreetName] = useState(\"\");\r\n    const [houseId, setHouseId] = useState(\"\");\r\n    const [houseNumber, setHouseNumber] = useState(\"\");\r\n    const [houseFlatId, setHouseFlatId] = useState(\"\");\r\n    const [houseFlatNumber, setHouseFlatNumber] = useState('');\r\n    useEffect(()=>{dispatch(requestStreets())});\r\n    useEffect(()=>{dispatch(requestHouses(streetId))},\r\n        [streetId]);\r\n    useEffect(()=>{dispatch(requestHouseFlats(houseId))},\r\n        [houseId])\r\n    const streets = useSelector(state => state.address.streets);\r\n    const houses = useSelector(state => state.address.houses);\r\n    const houseFlats = useSelector(state => state.address.houseFlats);\r\n    return <div className=\"app-address-clients\">\r\n        <p>\r\n            Адрес\r\n        </p>\r\n        <Select showSearch\r\n            style={{width: 200}}\r\n            placeholder=\"Улица\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            filterSort={(optionA, optionB) =>\r\n                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n            }\r\n            onSelect={(value, option)=>{\r\n                setStreetId(option.key);\r\n                setStreetName(option.value);\r\n            }}>\r\n            {streets.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <Select showSearch\r\n            style={{width: 80}}\r\n            placeholder=\"Дом\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            filterSort={(optionA, optionB) =>\r\n                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n            } onSelect={(value, option)=>{\r\n                setHouseId(option.key);\r\n                setHouseNumber(option.value);\r\n            }}>\r\n            {houses.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <Select showSearch\r\n            style={{width: 110}}\r\n            placeholder=\"Кв/офис\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n            filterSort={(optionA, optionB) =>\r\n                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n            } onSelect={(value, option)=>{\r\n                setHouseFlatId(option.key);\r\n                setHouseFlatNumber(option.value);\r\n            }}>\r\n            {houseFlats.map(key => <Option key={key.id} value={key.name}>{key.name}</Option>)}\r\n        </Select>\r\n        <p className=\"app-address-street\">\r\n            {streetName? <span>ул. {streetName}</span> : \"\"}\r\n            {houseNumber? <span>, {houseNumber}</span> : \"\"}\r\n            {houseFlatNumber ? <span>, {houseFlatNumber} <Button shape=\"circle\" icon={<UserAddOutlined />} /></span>  : \"\"}\r\n        </p>\r\n        <ClientList houseFlatId={houseFlatId}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default AddressAndClientList;","const ClientManagement = () => {}\r\n\r\nexport default ClientManagement;","import React from \"react\";\nimport './styles/App.css';\nimport AddressAndClientList from \"./components/Address/AddressAndClientList\";\nimport {Route, Routes} from \"react-router-dom\";\nimport ClientManagement from \"./components/ClientManagement/ClientManagement\";\nimport 'antd/dist/antd.css';\nimport {Layout} from \"antd\";\n\nconst {  Content, Footer } = Layout;\n\nconst App = () => {\n    return (\n        <div className=\"app-wrapper\">\n            <Layout className=\"layout\">\n                <Content style={{padding: '0 50px'}}>\n                    <div className=\"site-layout-content\">\n                        <AddressAndClientList/>\n                        <Routes>\n                        <Route path=\"/clientmanagement\" render={() => <ClientManagement/>}/>\n                        </Routes>\n                    </div>\n                </Content>\n                <Footer></Footer>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","import {clientManagementApi} from \"../api/clientmanagement-api\";\r\n\r\nconst CLIENTS_SET_CLIENT_ADDED = 'CLIENTS/SET_CLIENT_ADDED'\r\n\r\nlet initialState = {\r\n    id:0,\r\n    Name: \"\",\r\n    Phone: \"\",\r\n    Email: \"\"\r\n}\r\n\r\nconst clientManagementReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CLIENTS_SET_CLIENT_ADDED:\r\n            return{\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creator\r\nconst actions = {\r\n    setClientAdded: (id, phone, email, name) => ({type: 'CLIENTS/SET_CLIENT_ADDED', payload:{id, phone, email, name}}),\r\n}\r\n\r\n//thunk creator\r\nexport const getClientList = (phone, email, name) => {\r\n    return async(dispatch)=>{\r\n        let data = await clientManagementApi.addClient(phone, email, name);\r\n        dispatch(actions.setClientList(data.id, phone, email, name));\r\n    }\r\n}\r\nexport default clientManagementReducer;","import {combineReducers, createStore, applyMiddleware} from \"redux\"\r\nimport addressReducer from \"./addressReducer\";\r\nimport clientListReducer from \"./clientListReducer\";\r\nimport clientManagementReducer from \"./clientManagementReducer\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        address: addressReducer,\r\n        clientList: clientListReducer,\r\n        clientManagement: clientManagementReducer\r\n    }\r\n)\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}